{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECT_JAVA\\\\SpringBoot\\\\MangerHotel\\\\frontend\\\\myapp\\\\src\\\\component\\\\common\\\\RoomTypeSelector.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getRoomsType } from \"../../utils/ApiFunction\";\nimport { FormControl, Input, InputLabel, MenuItem } from \"@mui/material\";\nimport Button from \"@mui/material/Button\";\nimport Select from \"@mui/material/Select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RoomTypeSelector = ({\n  handleRoomInputChange,\n  newRoom\n}) => {\n  _s();\n  const [roomTypes, setRoomTypes] = useState([\"\"]);\n  const [showNewRoomTypeInput, setShowNewRoomTypeInput] = useState(false);\n  const [newRoomType, setNewRoomType] = useState(\"\");\n  useEffect(() => {\n    getRoomsType().then(data => {\n      setRoomTypes(data);\n    });\n  }, []);\n  const handleNewRoomTypeInputChange = e => {\n    setNewRoomType(e.target.value);\n  };\n  const handleAddNewRoomType = () => {\n    if (newRoomType !== \"\") {\n      setRoomTypes([...roomTypes, newRoomType]);\n      setNewRoomType(\"\");\n      setShowNewRoomTypeInput(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: roomTypes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          minWidth: 120\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"roomType\",\n            children: \"Select Room Type ...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"roomType\",\n            id: \"roomType\",\n            value: newRoom.roomType,\n            onChange: e => {\n              if (e.target.value === \"Add new\") {\n                setShowNewRoomTypeInput(true);\n              } else {\n                handleRoomInputChange(e);\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"Select a room type...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), roomTypes.map((type, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: type,\n              children: type\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Add new\",\n              children: \"Add new\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), showNewRoomTypeInput && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter new room type\",\n              value: newRoomType,\n              onChange: handleNewRoomTypeInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-hotel\",\n              type: \"button\",\n              onClick: handleAddNewRoomType,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(RoomTypeSelector, \"oms0h+livCwX3XJ/lHyj94bprkE=\");\n_c = RoomTypeSelector;\nexport default RoomTypeSelector;\nvar _c;\n$RefreshReg$(_c, \"RoomTypeSelector\");","map":{"version":3,"names":["useEffect","useState","getRoomsType","FormControl","Input","InputLabel","MenuItem","Button","Select","jsxDEV","_jsxDEV","Fragment","_Fragment","RoomTypeSelector","handleRoomInputChange","newRoom","_s","roomTypes","setRoomTypes","showNewRoomTypeInput","setShowNewRoomTypeInput","newRoomType","setNewRoomType","then","data","handleNewRoomTypeInputChange","e","target","value","handleAddNewRoomType","children","length","Box","sx","minWidth","fullWidth","id","fileName","_jsxFileName","lineNumber","columnNumber","name","roomType","onChange","map","type","index","className","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/PROJECT_JAVA/SpringBoot/MangerHotel/frontend/myapp/src/component/common/RoomTypeSelector.js"],"sourcesContent":["import {useEffect, useState} from \"react\";\r\nimport {getRoomsType} from \"../../utils/ApiFunction\";\r\nimport {FormControl, Input, InputLabel, MenuItem} from \"@mui/material\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Select from \"@mui/material/Select\";\r\n\r\nconst RoomTypeSelector = ({handleRoomInputChange, newRoom}) => {\r\n    const [roomTypes, setRoomTypes] = useState([\"\"]);\r\n    const [showNewRoomTypeInput, setShowNewRoomTypeInput] = useState(false);\r\n    const [newRoomType, setNewRoomType] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        getRoomsType().then((data) => {\r\n            setRoomTypes(data);\r\n        })\r\n    }, []);\r\n\r\n    const handleNewRoomTypeInputChange = (e) => {\r\n        setNewRoomType(e.target.value);\r\n    }\r\n\r\n    const handleAddNewRoomType = () => {\r\n        if(newRoomType !== \"\"){\r\n            setRoomTypes([...roomTypes,newRoomType])\r\n            setNewRoomType(\"\")\r\n            setShowNewRoomTypeInput(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {roomTypes.length >0 && (\r\n                <div>\r\n                    <Box sx={{ minWidth: 120 }}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id=\"roomType\" >Select Room Type ...</InputLabel>\r\n                        <Select name=\"roomType\"\r\n                                id=\"roomType\"\r\n                                value={newRoom.roomType}\r\n                                onChange={(e) => {\r\n                                    if(e.target.value ===\"Add new\") {\r\n                                        setShowNewRoomTypeInput(true)\r\n                                    }else {\r\n                                        handleRoomInputChange(e);\r\n                                    }\r\n                                }}\r\n                        >\r\n                            <MenuItem value=\"\">Select a room type...</MenuItem>\r\n                            {roomTypes.map((type,index) => (\r\n                                <option key={index} value={type}>{type}</option>\r\n                            ))}\r\n                            <option value=\"Add new\">Add new</option>\r\n                        </Select>\r\n                    </FormControl>\r\n                    {showNewRoomTypeInput && (\r\n                        <div className=\"mt-2\">\r\n                            <FormControl>\r\n                                <input\r\n                                    type=\"text\"\r\n                                       placeholder=\"Enter new room type\"\r\n                                       value={newRoomType}\r\n                                       onChange={handleNewRoomTypeInputChange}\r\n                                />\r\n                                <button className=\"btn btn-hotel\" type=\"button\" onClick={handleAddNewRoomType}>Add</button>\r\n                            </FormControl>\r\n                        </div>\r\n                    )}\r\n                    </Box>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RoomTypeSelector;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}