{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECT_JAVA\\\\SpringBoot\\\\MangerHotel\\\\frontend\\\\myapp\\\\src\\\\component\\\\common\\\\RoomTypeSelector.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getRoomsType } from \"../../utils/ApiFunction\";\nimport { Box, FormControl, Input, InputLabel, MenuItem } from \"@mui/material\";\nimport Button from \"@mui/material/Button\";\nimport Select from \"@mui/material/Select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RoomTypeSelector = ({\n  handleRoomInputChange,\n  newRoom\n}) => {\n  _s();\n  const [roomTypes, setRoomTypes] = useState([\"\"]);\n  const [showNewRoomTypeInput, setShowNewRoomTypeInput] = useState(false);\n  const [newRoomType, setNewRoomType] = useState(\"\");\n  useEffect(() => {\n    getRoomsType().then(data => {\n      setRoomTypes(data);\n    });\n  }, []);\n  const handleNewRoomTypeInputChange = e => {\n    setNewRoomType(e.target.value);\n  };\n  const handleAddNewRoomType = () => {\n    if (newRoomType !== \"\") {\n      setRoomTypes([...roomTypes, newRoomType]);\n      setNewRoomType(\"\");\n      setShowNewRoomTypeInput(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: roomTypes.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        minWidth: 120\n      },\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"roomType-label\",\n          children: \"Select Room Type ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"roomType-label\",\n          name: \"roomType\",\n          id: \"roomType\",\n          value: newRoom.roomType,\n          onChange: e => {\n            if (e.target.value === \"Add new\") {\n              setShowNewRoomTypeInput(true);\n            } else {\n              handleRoomInputChange(e);\n            }\n          },\n          children: [roomTypes.map((type, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: type,\n            children: type\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Add new\",\n            children: \"Add new\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), showNewRoomTypeInput && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2\",\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter new room type\",\n            value: newRoomType,\n            onChange: handleNewRoomTypeInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-hotel\",\n            type: \"button\",\n            onClick: handleAddNewRoomType,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }, this)\n  }, void 0, false);\n};\n_s(RoomTypeSelector, \"oms0h+livCwX3XJ/lHyj94bprkE=\");\n_c = RoomTypeSelector;\nexport default RoomTypeSelector;\nvar _c;\n$RefreshReg$(_c, \"RoomTypeSelector\");","map":{"version":3,"names":["useEffect","useState","getRoomsType","Box","FormControl","Input","InputLabel","MenuItem","Button","Select","jsxDEV","_jsxDEV","Fragment","_Fragment","RoomTypeSelector","handleRoomInputChange","newRoom","_s","roomTypes","setRoomTypes","showNewRoomTypeInput","setShowNewRoomTypeInput","newRoomType","setNewRoomType","then","data","handleNewRoomTypeInputChange","e","target","value","handleAddNewRoomType","children","length","sx","minWidth","fullWidth","id","fileName","_jsxFileName","lineNumber","columnNumber","labelId","name","roomType","onChange","map","type","index","className","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/PROJECT_JAVA/SpringBoot/MangerHotel/frontend/myapp/src/component/common/RoomTypeSelector.js"],"sourcesContent":["import {useEffect, useState} from \"react\";\r\nimport {getRoomsType} from \"../../utils/ApiFunction\";\r\nimport {Box, FormControl, Input, InputLabel, MenuItem} from \"@mui/material\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Select from \"@mui/material/Select\";\r\n\r\nconst RoomTypeSelector = ({handleRoomInputChange, newRoom}) => {\r\n    const [roomTypes, setRoomTypes] = useState([\"\"]);\r\n    const [showNewRoomTypeInput, setShowNewRoomTypeInput] = useState(false);\r\n    const [newRoomType, setNewRoomType] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        getRoomsType().then((data) => {\r\n            setRoomTypes(data);\r\n        })\r\n    }, []);\r\n\r\n    const handleNewRoomTypeInputChange = (e) => {\r\n        setNewRoomType(e.target.value);\r\n    }\r\n\r\n    const handleAddNewRoomType = () => {\r\n        if(newRoomType !== \"\"){\r\n            setRoomTypes([...roomTypes,newRoomType])\r\n            setNewRoomType(\"\")\r\n            setShowNewRoomTypeInput(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {roomTypes.length >0 && (\r\n                    <Box sx={{ minWidth: 120 }}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id=\"roomType-label\" >Select Room Type ...</InputLabel>\r\n                        <Select\r\n                                labelId=\"roomType-label\"\r\n                                name=\"roomType\"\r\n                                id=\"roomType\"\r\n                                value={newRoom.roomType}\r\n                                onChange={(e) => {\r\n                                    if(e.target.value ===\"Add new\") {\r\n                                        setShowNewRoomTypeInput(true)\r\n                                    }else {\r\n                                        handleRoomInputChange(e);\r\n                                    }\r\n                                }}\r\n                        >\r\n\r\n                            {roomTypes.map((type,index) => (\r\n                                <MenuItem key={index} value={type}>{type}</MenuItem>\r\n                            ))}\r\n                            <MenuItem value=\"Add new\">Add new</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    {showNewRoomTypeInput && (\r\n                        <div className=\"mt-2\">\r\n                            <FormControl>\r\n                                <input\r\n                                    type=\"text\"\r\n                                       placeholder=\"Enter new room type\"\r\n                                       value={newRoomType}\r\n                                       onChange={handleNewRoomTypeInputChange}\r\n                                />\r\n                                <button className=\"btn btn-hotel\" type=\"button\" onClick={handleAddNewRoomType}>Add</button>\r\n                            </FormControl>\r\n                        </div>\r\n                    )}\r\n                    </Box>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RoomTypeSelector;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}